/*
 Given an array of positive integers arr[], return the second largest element from the array. If the second largest element doesn't exist then return -1.

Note: The second largest element should not be equal to the largest element.

Examples:

Input: arr[] = [12, 35, 1, 10, 34, 1]
Output: 34
Explanation: The largest element of the array is 35 and the second largest element is 34.
Input: arr[] = [10, 5, 10]
Output: 5
Explanation: The largest element of the array is 10 and the second largest element is 5.
Input: arr[] = [10, 10, 10]
Output: -1
Explanation: The largest element of the array is 10 and the second largest element does not exist.
Constraints:
2 ≤ arr.size() ≤ 105
1 ≤ arr[i] ≤ 105
 */


class Solution {
    public int getSecondLargest(int[] a) {
//       int largest=Integer.MIN_VALUE;
//       for(int i=0;i<a.length;i++)
//       {
//           largest=Math.max(largest,a[i]);
//       }
//       int second_Largest=-1;
//       for(int i=0;i<a.length;i++)
//       {
//           if(a[i]<largest)
//           {
//               second_Largest=Math.max(second_Largest,a[i]);
//           }
//       }
//       return second_Largest;
//     }
// }
          
          int largest=a[0];
          int second_Largest=-1;
          for(int i=1;i<a.length;i++)
          {
              if(a[i]>largest)
              {
                  second_Largest=largest;
                  largest=a[i];
              }
              else if(a[i]>second_Largest  && a[i]<largest)
              {
                  second_Largest=a[i];
              }
          }
          return second_Largest;
    }
}

